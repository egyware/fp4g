
*** forma A ***
DEFINE Type Texture
[
	SET import = "gdx.Texture"
	SET name  = "Texture" //por defecto el mismo nombre del Type
]
Define Asset AsteroidePequeño
[
	SET atlas = "asteroide.atlas" 
	SET name  = "small.json";	
	SET type  = Sprite
]
Define Asset AsteroideGrande
[
	SET atlas = "asteroide.atlas" 
	SET name  = "big.json";	
	SET type  = Sprite
] 
Define Asset Bala
[	 
	SET name  = "bala.png";	
	SET type  = Texture
]

*** forma B ***
Assets 
[
	Texture: "bala.png" //archivos independientes
	Texture: "gui.png"
	Texture: "gui","general.atlas" //con atlas.
	Sprite: "perro.json" //archivo independiente
	Sprite: "perro","general.atlas" //con atlas
	Music: "musica.mp3"
]
*** forma C ***
Assets
[
	Zip    zipped: "assets.zip" 
	Atlas general: "general.atlas" from zipped //esto ultimo... podria ir codificado en en loader
	Texture  bala: "bala.png" 
	Texture   gui: "elementoA" from general 
]
*** forma D ***
Assets from Zip "assets.zip"
[	 
	Atlas general: "general.atlas"
	Texture  bala: "bala.png" 
	Texture   gui: "elementoA" from general 
]
*** forma E ***
Assets:"assets.zip" <--- detectar automaticamente el formato.
[	
	Atlas:"general.atlas"
	[
		Texture gui: "elementoA" //entonces tendrá que forzamente utilizar punto y coma?	 
	]
	Texture  bala: "bala.png"
]

* al utilizar esto, estoy sugiriendo que, debo referenciar los defines como variables?
* Pero... es necesario que todos los define sean un tipo de variable? 
* Si... porque la intencion al tratar de añadir eso es hacer algo por el estilo
** ADD BEHAVIOR SpriteBehavior(getSprite("asteroids.atlas"),tipo);
** ADD BEHAVIOR SpriteBehavior(Asteroide,tipo); //<
** Usando defines se ve engorroso (forma A)
** Si se usa la forma B se ve más ordenado, pero se pierde la conexión con las variables.
** Con esto me refiero que no se puede saber a que dato referenciar.