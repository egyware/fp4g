DEFINE GAME
[
	//primero methods...
	SET methods  = EMPTY AS MessageMethods;
	
	DEFINE MESSAGE Key
	[
		ADD press(Number key)
		{
			replace = "Input.Keys.%s == key",
			attachInputProcessor = true
		} AS MessageMethod;		
		ADD release(Number key) 
		{			
			replace = "Input.Keys.%s == key", 
			attachInputProcessor = true
		} AS MessageMethod;
	]
	
	DEFINE MESSAGE Camera
	[
		ADD follow(Entity entity);
		ADD unFollow();
	]
	
	DEFINE MESSAGE Mouse
	[
		ADD pressButton(Number button, Number x, Number y)
		{ 
			replace = "Input.Buttons.%s == button",
			attachInputProcessor = true
		} AS MessageMethod;
		ADD releaseButton(Number button, Number x,Number y) 
		{			
			replace="Input.Buttons.%s == button",
			attachInputProcessor = true
		} AS MessageMethod;
		ADD move(Number x, Number y) 
		{			
			attachInputProcessor = true
		} AS MessageMethod;
		ADD dragged(Number x, Number y) 
		{			
			attachInputProcessor = true
		} AS MessageMethod;
	]
	
	DEFINE MESSAGE Translate
	[
		ADD translate(Number x, Number y);
		ADD rotate(Number grad);		
	]
	
	DEFINE MESSAGE Move
	[		
		ADD angularSpeed(Number w);
		ADD speed  (Number x, Number y);
		ADD forward(Number units);
	]
	
	DEFINE MESSAGE Platform
	[
		ADD jump(Number vel);
		ADD move(Number vel);
	]
	
	DEFINE MESSAGE Contact
	[		
		ADD begin(Entity other, Fixture otherFix, Fixture ownFix, Contact contact) { replace="other instanceof %s" } AS MessageMethod;
		ADD   end(Entity other, Fixture otherFix, Fixture ownFix, Contact contact) { replace="other instanceof %s" } AS MessageMethod;
	]
	
	DEFINE MESSAGE Gun
	[
		ADD         shot(Number rot, Number dist, Number vel);
		ADD       reload(Number ammo);
		ADD changeBullet(String entityName);
	]
	
	DEFINE MESSAGE AutoGun
	[
		ADD setDelayShot(Number delay);
		ADD      setShot(Number rot, Number dist, Number vel);
	]
	
	DEFINE MESSAGE Entity
	[
		SET factory = true;		
		ADD   init();
		ADD deinit();
	]
	
	DEFINE MESSAGE Spawn
	[	
		ADD   added(Entity entity) { replace="entity instanceof %s" } AS MessageMethod;
		ADD removed(Entity entity) { replace="entity instanceof %s" } AS MessageMethod;
	]	
	
	DEFINE MESSAGE Timer
	[
		ADD  active(Number index) { replace="index == %s" } AS MessageMethod;
		ADD setTime(Number index, Number time);
		ADD  cancel(Number index);
	]
	DEFINE MESSAGE Level
	[
		ADD change(String state);
		ADD reload();
	]
]