DEFINE GAME
[
	DEFINE MANAGER EntityManager
	[
		SET priority = 1;
		SET receiver = true;
		SET extra = 
		{
			setMethod = "EntityManager",
		}
		AS ManagerData;
	]
	
	DEFINE MANAGER PhysicsManager
	[
		SET priority = 2;			
		SET debug = 
		{
			//imports adicionales, solo usar con debug
			imports       = 
			{
				@'com.badlogic.gdx.physics.box2d.Box2DDebugRenderer',
				@'com.badlogic.gdx.physics.box2d.World',
				@'static com.apollo.managers.PhysicsManager.*',
			},
			fields        = 
			{
				@'OrthographicCamera debugCamera',
				@'Box2DDebugRenderer debugRender = new Box2DDebugRenderer(true,true,true,true,true,true)',
				@'World world',
			},
			preInitialize = 
			{
				@'debugCamera = new OrthographicCamera()',
				@'debugCamera.setToOrtho(false,w*SCALE,h*SCALE)'		
			},
			postInitialize = 
			{
				@'world = container.getManager(PhysicsManager.class).getb2World()',				
			},			
			postUpdate    = 
			{
				@'debugCamera.position.set(camera.position).scl(SCALE)',
				@'debugCamera.update()',
				@'debugRender.render(world,debugCamera.combined)'
			},			
		}
		AS ManagerData;		
	]
	
	DEFINE MANAGER RenderManager
	[
		SET priority = 3;
		
		SET managerClass = "StageRenderManager";
		SET extra = 
		{
			preInitialize = 
				{
					@'batch = new SpriteBatch()'					
				},
			postInitialize=
			{
				@'camera = container.getManager(StageRenderManager.class).getCamera()'
			},
			params        = {@'w',@'h',@'batch'},			
			fields        = 
				{					
					@'SpriteBatch batch',
					@'Camera camera'
				}			
		}
		AS ManagerData;
	]
	DEFINE BEHAVIOR CircleBody
	[	
		SET group = "body";
	]
	DEFINE BEHAVIOR PlatformBody
	[	
		SET group = "body";
	]
	DEFINE BEHAVIOR BoxBody
	[	
		SET group = "body";
	]
	DEFINE BEHAVIOR Texture
	[
	]
	DEFINE BEHAVIOR Timer
	[
	]
	
	DEFINE ASSET Texture
	[
		SET className      = "Texture"; //el nombre de esta clase...
		SET classParameter = "TextureParameter"; //nombre de los parametros								
	]
	DEFINE ASSET Atlas
	[
		SET className = "TextureAtlas";
	]
	DEFINE ASSET Sprite
	[
		SET className      = "Sprite";
		SET classParameter = "AnimationParameter"; 
		SET groupName      = "textureAtlasPath";
	]
	DEFINE ASSET TileMap
	[
		SET className      = "TiledMap";		
	]
	DEFINE ASSET Terrain2D
	[
		SET className      = "Terrain2D";
		SET classParameter = "TerrainParameter";
	]
	DEFINE ASSET EntitySpawn
	[
		SET className     = "EntitySpawn";
		SET classParamter = "EntitySpawnParamter";
	]
	DEFINE ASSET Sound
	[
	]
	DEFINE ASSET Music
	[
	]
	
	SET resolvers = 
	{ 		
		State = 
		{
			General =
			{
				"com.apollo.WorldContainer",					
				"com.apollo.GameManager",
				"com.apollo.GameState",
				"com.badlogic.gdx.Gdx",
				"com.badlogic.gdx.graphics.GL10",
				"com.badlogic.gdx.graphics.Camera",
				"com.badlogic.gdx.graphics.OrthographicCamera"				
			}
		} AS DependResolver,
		Manager = 
		{
			RenderManager = 
			{
				"com.apollo.managers.StageRenderManager",
				"com.badlogic.gdx.graphics.g2d.SpriteBatch",				
			},
			PhysicsManager = 
			{
				"com.apollo.managers.PhysicsManager"				
			},
			EntityManager = 
			{
				"com.apollo.managers.EntityManager",				
			} 
		} AS DependResolver,
		Entity =
		{ 
			Builder = 
			{
				"com.apollo.Message",
				"com.apollo.MessageHandler",
				"com.apollo.EntityBuilder",
				"com.apollo.Entity",
				"com.apollo.WorldContainer",				
			},
			Entity = 
			{
				"com.apollo.Entity",			
				"com.apollo.WorldContainer",				
				"com.apollo.Behavior",		
				"com.apollo.messages.EntityMessage",				
				"com.apollo.utils.Bag",
				"java.util.HashMap",
				"java.util.Map",
			},
			Behaviors = 
			{
				"com.apollo.components.%sBehavior"
			},
			Message = 
			{
				"com.apollo.Message",
				"com.apollo.utils.Bag",
				"com.apollo.MessageHandler",
				"com.apollo.utils.ImmutableBag"
			}
		} AS EntityDependResolver,
		Message = 
		{
			Level   = 
			{				
				"com.apollo.messages.CameraMessage",
				"com.apollo.messages.CameraMessageHandler"		
			},
			Level   = 
			{				
				"com.apollo.messages.LevelMessage",
				"com.apollo.messages.LevelMessageHandler"		
			},
			Key     = 
			{
				"com.badlogic.gdx.Input",
				"com.apollo.messages.KeyMessage",
				"com.apollo.messages.KeyMessageHandler"		
			},
			Mouse =
			{
				"com.badlogic.gdx.Input",
				"com.apollo.messages.MouseMessage",
				"com.apollo.messages.MouseMessageHandler"		
			},
			Move    = 
			{
				"com.apollo.messages.MoveMessage",
				"com.apollo.messages.MoveMessageHandler"
			},
			Contact =
			{
				"com.badlogic.gdx.physics.box2d.Fixture",
				"com.badlogic.gdx.physics.box2d.Contact",
				"com.apollo.messages.ContactMessage",
				"com.apollo.messages.ContactMessageHandler"	
			},
			Gun = 
			{
				"com.apollo.messages.GunMessage",
				"com.apollo.messages.GunMessageHandler"
			},
			AutoGun = 
			{
				"com.apollo.messages.AutoGunMessage",
				"com.apollo.messages.AutoGunMessageHandler"
			},
			Entity =
			{
				"com.apollo.messages.EntityMessage",
				"com.apollo.messages.EntityMessageHandler"
			},
			Spawn =
			{
				"com.apollo.messages.SpawnMessage",
				"com.apollo.messages.SpawnMessageHandler"
			},
			Camera =
			{
				"com.apollo.messages.CameraMessage",
				"com.apollo.messages.CameraMessageHandler"
			},
			Timer =
			{
				"com.apollo.messages.TimerMessage",
				"com.apollo.messages.TimerMessageHandler"
			}
		} AS DependResolver,
		Asset =
		{
			Texture =
			{
				"com.badlogic.gdx.graphics.Texture",
				"com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter"
			},
			Atlas =
			{
				"com.badlogic.gdx.graphics.g2d.TextureAtlas"
			},
			Sprite = 
			{
				"com.apollo.managers.graphics.Sprite",
				"com.apollo.managers.graphics.SpriteLoader.AnimationParameter",
			},
			TileMap = 
			{
				"com.badlogic.gdx.maps.tiled.TiledMap"
			},
			Terrain2D =
			{
				"com.apollo.managers.physics.Terrain2D"
			},
			EntitySpawn =
			{
				"com.apollo.managers.entity.EntitySpawn",
				"com.apollo.managers.entity.EntitySpawnLoader.EntitySpawnParameter",
			}
		} AS DependResolver,
		STRUCT =
		{
			Rectangle = 
			{
				"com.badlogic.gdx.math.Rectangle",
			},
			MapProperties = 
			{
				"com.badlogic.gdx.maps.MapProperties",
			}			
		} AS DependResolver,
	} AS DependResolvers;
	
	DEFINE STRUCT Rectangle 
	[		
	]
	
	DEFINE STRUCT MapProperties
	[		
	]	
]